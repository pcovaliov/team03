@model Twitter.Models.UserModel
@{
 ViewBag.Title = "Login";
}
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css">

<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
<body style="background-color:#E5E5E5;">

@using (Html.BeginForm("Login","User",FormMethod.Post))
{   
 @Html.ValidationSummary(true)
<fieldset style="
width:500px; 
margin:auto;
text-align:center;
background: #eeeeee; /* Old browsers */
background: -moz-linear-gradient(top,  #eeeeee 0%, #cccccc 100%); /* FF3.6+ */
background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#eeeeee), color-stop(100%,#cccccc)); /* Chrome,Safari4+ */
background: -webkit-linear-gradient(top,  #eeeeee 0%,#cccccc 100%); /* Chrome10+,Safari5.1+ */
background: -o-linear-gradient(top,  #eeeeee 0%,#cccccc 100%); /* Opera 11.10+ */
background: -ms-linear-gradient(top,  #eeeeee 0%,#cccccc 100%); /* IE10+ */
background: linear-gradient(to bottom,  #eeeeee 0%,#cccccc 100%); /* W3C */
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#eeeeee', endColorstr='#cccccc',GradientType=0 ); /* IE6-9 */

       ">
 
    @if (ViewBag.Message == null)
        {
            <div style="border: solid 1px white">
               <h4> Please complete login form.</h4>
            </div>
        }
        @if (ViewBag.Message == "Successfully Loged.")
        {
            <div style="border: solid 1px green">
                @ViewBag.Message
            </div>
        }
        @if (ViewBag.Message == "Login Failed.")
        {
            <div style="border: solid 1px red">
                @ViewBag.Message
            </div>
        }
<div class="editor-label">
          @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email, new { @class = "input-xlarge"})
        </div>
          @Html.ValidationMessageFor(model => model.Email)
 <div class="editor-label">
            @Html.LabelFor(model => model.UserPassword)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.UserPassword)         
        </div>
       @Html.ValidationMessageFor(model => model.UserPassword)
       <br>
       <br>
<div class="control-group">
  <div class="controls">
    <button type="submit" id="singlebutton" name="singlebutton" class="btn btn-primary">Sign In</button>
  </div>

<br>
<div>
    @Html.ActionLink("Sign Up", "Register")
</div>
 </div> 
         
</fieldset>
}
    </body>
@section Scripts{
 @Scripts.Render("~/bundles/jqueryval")
}
